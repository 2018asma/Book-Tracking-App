{"version":3,"sources":["BooksAPI.js","Book.js","BookShelf.js","BookShelfs.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","onBookShelfUpdate","e","target","value","_this","props","onShelfUpdate","console","log","imgLinks","this","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","thumbnail","onChange","defaultValue","disabled","title","authors","React","Component","BookShelf","state","_this2","shelfTitle","booksList","map","key","src_Book","BookShelfs","src_BookShelf","currentlyReading","wantToread","read","react_router_dom","to","Search","resulte","BooksAPI","error","bookInShelf","find","b","setState","type","placeholder","BooksApp","routing","_this3","cur","filter","want","react_router","exact","path","render","src_BookShelfs","src_Search","ReactDOM","src_App","document","getElementById"],"mappings":"6QACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,SCCRC,oNAzCbC,kBAAoB,SAACC,GACnB,IAAMpB,EAAQoB,EAAEC,OAAOC,MACvBC,EAAKC,MAAMC,cAAcF,EAAKC,MAAMzB,KAAMC,GAC1C0B,QAAQC,IAAIJ,EAAKC,MAAMzB,KAAMC,4EAG7B,IAAM4B,EAAWC,KAAKL,MAAMzB,KAAK+B,WACjC,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVC,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAiBV,EAAQ,QAAA1B,OAAW0B,EAASW,UAApB,MAAoC,UAIjER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQO,SAAUX,KAAKV,kBAAmBsB,aAAcZ,KAAKL,MAAMzB,KAAKC,OACrE0B,QAAQC,IAAIE,KAAKL,MAAMzB,KAAKC,OAC7B+B,EAAAC,EAAAC,cAAA,UAAQX,MAAM,OAAOoB,UAAQ,GAA7B,cAGAX,EAAAC,EAAAC,cAAA,UAAQX,MAAM,oBAAd,qBACAS,EAAAC,EAAAC,cAAA,UAAQX,MAAM,cAAd,gBACAS,EAAAC,EAAAC,cAAA,UAAQX,MAAM,QAAd,QACAS,EAAAC,EAAAC,cAAA,UAAQX,MAAM,QAAd,WAINS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcL,KAAKL,MAAMzB,KAAK4C,OAC7CZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBL,KAAKL,MAAMzB,KAAK6C,iBAnCpCC,IAAMC,YCwBVC,6MAtBbC,MAAQ,2EACC,IAAAC,EAAApB,KACP,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBL,KAAKL,MAAM0B,YAC5CnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEVL,KAAKL,MAAM2B,UAAUC,IAAI,SAACrD,GACxB,OAAOgC,EAAAC,EAAAC,cAAA,MAAIoB,IAAKtD,EAAKI,IACnB4B,EAAAC,EAAAC,cAACqB,EAAD,CAAMvD,KAAMA,EAAM0B,cAAewB,EAAKzB,MAAMC,6BAXtCoB,IAAMC,WC0BfS,mLAtBX,OACExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuB,EAAD,CAAWN,WAAW,oBAAoBC,UAAWtB,KAAKL,MAAMiC,iBAC9DhC,cAAeI,KAAKL,MAAMC,gBAE5BM,EAAAC,EAAAC,cAACuB,EAAD,CAAWN,WAAW,eAAeC,UAAWtB,KAAKL,MAAMkC,WAAYjC,cAAeI,KAAKL,MAAMC,gBACjGM,EAAAC,EAAAC,cAACuB,EAAD,CAAWN,WAAW,OAAOC,UAAWtB,KAAKL,MAAMmC,KAAMlC,cAAeI,KAAKL,MAAMC,kBAGvFM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,WAAT,uBAjBehB,IAAMC,WCgEhBgB,6MA7Dbd,MAAQ,CACNe,QAAS,MAEXjD,OAAS,SAACM,GACR,IAAML,EAAQK,EAAEC,OAAOC,MAClBP,EAMLiD,EAAgBjD,GAAOJ,KAAK,SAAAoD,GACtBA,EAAQE,QACVF,EAAU,IAEZA,EAAUA,EAAQX,IAAI,SAACrD,GACrB,IAAMmE,EAAc3C,EAAKC,MAAMP,MAAMkD,KAAK,SAAAC,GAAC,OAAIA,EAAEjE,KAAOJ,EAAKI,KAI7D,OAHI+D,IACFnE,EAAKC,MAAQkE,EAAYlE,OAEpBD,IAETwB,EAAK8C,SAAS,CAAEN,cAhBhBxC,EAAK8C,SAAS,CAAEN,QAAS,8EAoBpB,IAAAd,EAAApB,KAEP,OADAH,QAAQC,IAAIE,KAAKmB,MAAMe,SAErBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM1B,UAAU,eAAe2B,GAAG,KAAlC,SACA9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BASbH,EAAAC,EAAAC,cAAA,SACEqC,KAAK,OACLC,YAAY,4BACZ/B,SAAUX,KAAKf,WAGrBiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXL,KAAKmB,MAAMe,SAAWlC,KAAKmB,MAAMe,QAAQX,IAAI,SAAArD,GAAI,OAChDgC,EAAAC,EAAAC,cAAA,MAAIoB,IAAKtD,EAAKI,IACZ4B,EAAAC,EAAAC,cAACqB,EAAD,CAAMvD,KAAMA,EAAM0B,cAAewB,EAAKzB,MAAMC,6BApDvCoB,IAAMC,WCmEZ0B,6MAlEbxB,MAAQ,CACN/B,MAAO,GAOPwD,SAAS,KAaXhD,cAAgB,SAAC1B,EAAMC,GACrBgE,EAAgBjE,EAAMC,GACnBW,KACCY,EAAK8C,SAAS,iBAAO,CACnBpD,MAAOM,EAAKyB,MAAM/B,MAAMmC,IAAI,SAAAgB,GAC1B,OAAIA,EAAEzB,QAAU5C,EAAK4C,OACnByB,EAAEpE,MAAQA,EACHoE,GAEAA,IAGXK,SAAS,0FAtBG,IAAAxB,EAAApB,KLCpB5B,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QKDhBN,KAAK,SAACM,GACLgC,EAAKoB,SAAS,CAAEpD,MAAOA,uCAwBpB,IAAAyD,EAAA7C,KACD8C,EAAM9C,KAAKmB,MAAM/B,MAAM2D,OAAO,SAAC7E,GAAD,MAAyB,qBAAfA,EAAKC,QAC7C6E,EAAOhD,KAAKmB,MAAM/B,MAAM2D,OAAO,SAAC7E,GAAD,MAAyB,eAAfA,EAAKC,QAC9C2D,EAAO9B,KAAKmB,MAAM/B,MAAM2D,OAAO,SAAC7E,GAAD,MAAyB,SAAfA,EAAKC,QACpD,OACE+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,IACXC,OAAQ,kBAAMlD,EAAAC,EAAAC,cAACiD,EAAD,CACZzB,iBAAkBkB,EAClBjB,WAAYmB,EACZlB,KAAMA,EACNlC,cAAeiD,EAAKjD,mBAGxBM,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CACEE,KAAK,UACLC,OAAQ,kBACNlD,EAAAC,EAAAC,cAACkD,EAAD,CACElE,MAAOyD,EAAK1B,MAAM/B,MAClBQ,cAAeiD,EAAKjD,2BA3DXoB,IAAMC,iBCD7BsC,IAASH,OACLlD,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACI7B,EAAAC,EAAAC,cAACoD,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.a762a267.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\n\r\nclass Book extends React.Component {\r\n  onBookShelfUpdate = (e) => {\r\n    const shelf = e.target.value\r\n    this.props.onShelfUpdate(this.props.book, shelf)\r\n    console.log(this.props.book, shelf)\r\n  }\r\n  render() {\r\n    const imgLinks = this.props.book.imageLinks\r\n    return (\r\n\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: imgLinks ? `url(\"${imgLinks.thumbnail}\")` : 'none'\r\n\r\n            }}\r\n          ></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select onChange={this.onBookShelfUpdate} defaultValue={this.props.book.shelf}>\r\n              {console.log(this.props.book.shelf)}\r\n              <option value=\"move\" disabled>\r\n                Move to...\r\n                </option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{this.props.book.title}</div>\r\n        <div className=\"book-authors\">{this.props.book.authors}</div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport Book from './Book';\r\n\r\nclass BookShelf extends React.Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{this.props.shelfTitle}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {\r\n              this.props.booksList.map((book) => {\r\n                return <li key={book.id}>\r\n                  <Book book={book} onShelfUpdate={this.props.onShelfUpdate} />\r\n                </li>\r\n              })\r\n            }\r\n\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelf;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ReacDom from 'react-dom'\r\nimport BookShelf from './BookShelf'\r\n\r\nclass BookShelfs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <BookShelf shelfTitle='Currently Reading' booksList={this.props.currentlyReading}\r\n              onShelfUpdate={this.props.onShelfUpdate}\r\n            />\r\n            <BookShelf shelfTitle='Want To Read' booksList={this.props.wantToread} onShelfUpdate={this.props.onShelfUpdate} />\r\n            <BookShelf shelfTitle='Read' booksList={this.props.read} onShelfUpdate={this.props.onShelfUpdate} />\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to='/search'>Add a book</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelfs;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from './Book';\r\n\r\n\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    resulte: []\r\n  }\r\n  search = (e) => {\r\n    const query = e.target.value;\r\n    if (!query) {\r\n      this.setState({ resulte: [] });\r\n      return;\r\n    }\r\n\r\n    //-----------------------------\r\n    BooksAPI.search(query).then(resulte => {\r\n      if (resulte.error) {\r\n        resulte = [];\r\n      }\r\n      resulte = resulte.map((book) => {\r\n        const bookInShelf = this.props.books.find(b => b.id === book.id);\r\n        if (bookInShelf) {\r\n          book.shelf = bookInShelf.shelf;\r\n        }\r\n        return book;\r\n      });\r\n      this.setState({ resulte });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.resulte)\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\" >\r\n          <Link className=\"close-search\" to='/' >close</Link>\r\n          <div className=\"search-books-input-wrapper\" >\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              onChange={this.search} />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {this.state.resulte && this.state.resulte.map(book => (\r\n              <li key={book.id}>\r\n                <Book book={book} onShelfUpdate={this.props.onShelfUpdate} />\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport BookShelfs from './BookShelfs'\r\nimport Search from './Search'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    routing: false\r\n  }\r\n  //++++ Start of Did Mount ++++\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n      .then((books) => {\r\n        this.setState({ books: books })\r\n      })\r\n\r\n  }\r\n  // ++++ End of Did Mount ++++\r\n\r\n  //++++ Start of  onShelfUpdate ++++\r\n  onShelfUpdate = (book, shelf) => {\r\n    BooksAPI.update(book, shelf)\r\n      .then(\r\n        this.setState(() => ({\r\n          books: this.state.books.map(b => {\r\n            if (b.title === book.title) {\r\n              b.shelf = shelf;\r\n              return b\r\n            } else {\r\n              return b\r\n            }\r\n          }),\r\n          routing: false\r\n        }))\r\n      )\r\n  };\r\n  //-------------\r\n  render() {\r\n    const cur = this.state.books.filter((book) => book.shelf === 'currentlyReading')\r\n    const want = this.state.books.filter((book) => book.shelf === 'wantToRead')\r\n    const read = this.state.books.filter((book) => book.shelf === 'read')\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact path='/'\r\n          render={() => <BookShelfs\r\n            currentlyReading={cur}\r\n            wantToread={want}\r\n            read={read}\r\n            onShelfUpdate={this.onShelfUpdate}\r\n          />}\r\n        />\r\n        <Route\r\n          path='/search'\r\n          render={() =>\r\n            <Search\r\n              books={this.state.books}\r\n              onShelfUpdate={this.onShelfUpdate}\r\n            />}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'))\r\n"],"sourceRoot":""}